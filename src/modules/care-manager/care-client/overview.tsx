import { PiButton, PiCheckbox, PiRecentActivity, PiTypography } from "pixel-kit";
import React, { useEffect, useState } from "react";
import { ApiResponseProps, PayloadProps, UrlParams } from "../../../core/schema";
import {
  OverviewContainer,
  OverviewRightContainer,
  OverviewleftContainer,
  GwOverviewCard,
  ToDoCard,
  GwDocumentCard,
} from "../../../styles/common-styles";
import apiEndpoint from "../../../core/apiend_point";
import { triggerApi } from "../../../services";
import { getLocalStorage } from "../../../core/localStorageService";
import Appointments from "./appointments";
import { ActiviyProps } from "pixel-kit/dist/components/recentActivity/recentActivity";
import { DateDuration, DateFormats } from "../../../core/dateFormats";
import { useHistory } from 'react-router-dom'
import { ReadinessIcon, RightIcon } from "../../../components/icon/icons";

export default function Overview({ ...props }) {
  const token = getLocalStorage("token") ? getLocalStorage("token") : "";
  const [recentActivity, setRecentActivity] = useState<ActiviyProps[]>([]);
  let history = useHistory()

  useEffect(() => {
    getRecentActivity()
  }, []);

  const getRecentActivity = () => {
    const apiObject: PayloadProps = {
      payload: {},
      method: "GET",
      apiUrl: apiEndpoint.getRecentActivity + '/' + props.id,
      headers: {
        Authorization: token,
      },
    };
    triggerApi(apiObject)
      .then((res: ApiResponseProps) => {
        let newdata = res.data.result.map((obj: any) => {
          obj.image = ''
          obj.isIntenral = obj.is_internal
          obj.time = DateDuration(obj.created_date)
          obj.message = <div dangerouslySetInnerHTML={replaceBoldMessage(obj)} />
          return obj;
        })
        // console.log(newdata)
        setRecentActivity(newdata);
      })
      .catch((err: object) => {
        console.log(err, "Error");
      });
  };

  function replaceBoldMessage(obj: any) {
    var message = obj.message;
    const message_data = obj.message_data;
    for (const property in message_data) {
      //   console.log(message)
      let regex = new RegExp("{%" + property + "%}", "g");
      message = message.replace(regex, `<span class="clientName">${message_data[property].text}</span>`);
    }

    return { __html: message };
  }

  return (
    <>
      <OverviewContainer>
        <OverviewleftContainer>
          <GwOverviewCard>
            <div className="GwCardHeader">
              <PiTypography component="h3">Goal</PiTypography>
              <span>
                <PiButton
                  appearance="link"
                  label="Edit"
                  type="button"
                  size="medium"
                  onClick={props.onEditHealthProfile}
                />
              </span>
            </div>
            <div className="GwCardBody">
              <div className="GwCardBodyContentHolder">
                <span className="GwCardIcon">
                  <svg
                    width="24"
                    height="25"
                    viewBox="0 0 24 25"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M17.5365 1.91729C17.6737 1.97398 17.7909 2.07009 17.8734 2.19345C17.9559 2.31682 18 2.46188 18 2.61029V6.36029H21.75C21.8985 6.36003 22.0438 6.40387 22.1674 6.48626C22.291 6.56865 22.3873 6.68589 22.4442 6.8231C22.5011 6.96031 22.5159 7.11132 22.4869 7.25698C22.4578 7.40264 22.3862 7.5364 22.281 7.64129L19.281 10.6413C19.2112 10.7109 19.1284 10.7661 19.0373 10.8036C18.9462 10.8412 18.8486 10.8605 18.75 10.8603H14.5605L13.4505 11.9718C13.5098 12.1942 13.5172 12.4272 13.4721 12.6529C13.4271 12.8786 13.3307 13.0909 13.1905 13.2734C13.0503 13.4559 12.8701 13.6038 12.6636 13.7055C12.4572 13.8073 12.2301 13.8603 12 13.8603C11.6022 13.8603 11.2206 13.7023 10.9393 13.421C10.658 13.1396 10.5 12.7581 10.5 12.3603L10.5015 12.2913C10.5118 12.0672 10.5722 11.8483 10.6783 11.6507C10.7844 11.4531 10.9334 11.2817 11.1145 11.1493C11.2955 11.0169 11.504 10.9268 11.7244 10.8856C11.9449 10.8444 12.1719 10.8532 12.3885 10.9113L13.5 9.79979V5.61029C13.4998 5.51173 13.5191 5.41411 13.5567 5.323C13.5942 5.23188 13.6494 5.14907 13.719 5.07929L16.719 2.07929C16.824 1.97447 16.9577 1.90313 17.1032 1.87429C17.2487 1.84546 17.3995 1.86042 17.5365 1.91729ZM18.4395 9.36029L19.9395 7.86029H17.25C17.0511 7.86029 16.8603 7.78127 16.7197 7.64062C16.579 7.49997 16.5 7.3092 16.5 7.11029V4.42079L15 5.92079V9.36029H18.4395ZM20.9175 11.1243C21.1763 12.992 20.842 14.8938 19.9617 16.5613C19.0814 18.2288 17.6996 19.5776 16.0114 20.4175C14.3233 21.2574 12.4139 21.5458 10.553 21.2421C8.69206 20.9384 6.97351 20.0578 5.63996 18.7248C4.30641 17.3918 3.42521 15.6736 3.12077 13.8127C2.81632 11.9519 3.10401 10.0425 3.94321 8.35397C4.78242 6.66546 6.13075 5.28317 7.79787 4.40223C9.46499 3.5213 11.3667 3.18622 13.2345 3.44429L12.66 4.01879C12.4222 4.25658 12.2408 4.54464 12.129 4.86179L12 4.86029C10.5112 4.86051 9.05614 5.30383 7.82013 6.13378C6.58412 6.96374 5.62309 8.14278 5.05942 9.52076C4.49575 10.8987 4.35495 12.4133 4.65495 13.8716C4.95495 15.3298 5.68217 16.6658 6.74401 17.7094C7.80585 18.753 9.15425 19.4569 10.6175 19.7316C12.0808 20.0062 13.5926 19.8392 14.9606 19.2517C16.3286 18.6642 17.4908 17.6828 18.2992 16.4326C19.1076 15.1824 19.5256 13.7199 19.5 12.2313C19.8159 12.1195 20.1029 11.9386 20.34 11.7018L20.916 11.1243H20.9175ZM12 7.11029C10.9616 7.11029 9.94661 7.4182 9.08326 7.99508C8.2199 8.57195 7.54699 9.39189 7.14963 10.3512C6.75227 11.3105 6.6483 12.3661 6.85088 13.3845C7.05345 14.4029 7.55346 15.3384 8.28769 16.0726C9.02192 16.8068 9.95738 17.3068 10.9758 17.5094C11.9942 17.712 13.0498 17.608 14.0091 17.2107C14.9684 16.8133 15.7883 16.1404 16.3652 15.277C16.9421 14.4137 17.25 13.3986 17.25 12.3603H15.75C15.75 13.102 15.5301 13.827 15.118 14.4437C14.706 15.0604 14.1203 15.541 13.4351 15.8248C12.7498 16.1087 11.9958 16.1829 11.2684 16.0382C10.541 15.8935 9.8728 15.5364 9.34835 15.0119C8.8239 14.4875 8.46675 13.8193 8.32205 13.0919C8.17736 12.3645 8.25162 11.6105 8.53545 10.9252C8.81928 10.24 9.29993 9.65434 9.91661 9.24228C10.5333 8.83023 11.2583 8.61029 12 8.61029V7.11029Z"
                      fill="#BDBDBD"
                    />
                  </svg>
                </span>
                <div className="GwCardContent">
                  <span> No goals yet </span>
                  <span> Click edit to add your clientâ€™s health goals</span>
                </div>
              </div>
            </div>
          </GwOverviewCard>

          <GwOverviewCard>
            <div className="GwCardHeader">
              <PiTypography component="h3">Active plan</PiTypography>
            </div>

            {props.clientDetails.active_health_plan ? (
              <GwDocumentCard onClick={() => history.push("/office/health-plan" + '/' + props.clientDetails.active_health_plan?._id + '/' + props.id + "/phases")}>
                <div className="DocumentTitle">
                  <svg width="27" height="24" viewBox="0 0 27 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M12.8867 1.4488C7.17246 1.4488 2.50528 5.99456 2.50528 11.6435C2.50528 11.9778 2.21972 12.2488 1.86747 12.2488C1.51521 12.2488 1.22965 11.9778 1.22965 11.6435C1.22965 5.36315 6.42943 0.238281 12.8867 0.238281C18.9387 0.238281 23.8862 4.7401 24.4833 10.4758L25.1671 9.73107C25.3985 9.47905 25.8014 9.45278 26.067 9.67239C26.3326 9.892 26.3602 10.2743 26.1288 10.5263L24.9971 11.7588C24.7428 12.0358 24.4017 12.1947 24.0479 12.2337C24.0023 12.2436 23.9547 12.2488 23.9059 12.2488C23.8731 12.2488 23.8408 12.2464 23.8093 12.2419C23.4439 12.2267 23.0826 12.0845 22.8059 11.8133L21.5167 10.5497C21.2716 10.3096 21.2782 9.92639 21.5312 9.69387C21.7843 9.46135 22.1881 9.46753 22.4331 9.70769L23.1988 10.4582C22.6001 5.37195 18.1952 1.4488 12.8867 1.4488ZM13.2774 6.84837C15.1696 5.40296 17.9754 5.90588 19.1817 7.90671C19.9303 9.14846 19.8089 10.6973 18.8748 11.8202L13.8618 17.8462C13.266 18.5625 12.1214 18.5625 11.5256 17.8462L6.51266 11.8202C5.57854 10.6973 5.45706 9.14846 6.20572 7.90671C7.41203 5.90588 10.2178 5.40296 12.11 6.84837L12.6937 7.29419L13.2774 6.84837ZM18.0745 8.50785C17.2578 7.15329 15.3583 6.81281 14.0772 7.79135L13.4766 8.25017C13.0195 8.5993 12.3679 8.5993 11.9109 8.25017L11.3102 7.79135C10.0291 6.81281 8.12961 7.15329 7.31294 8.50785C6.82277 9.32087 6.9023 10.335 7.5139 11.0702L12.5268 17.0962C12.612 17.1985 12.7755 17.1985 12.8606 17.0962L17.8735 11.0702C18.4851 10.335 18.5646 9.32087 18.0745 8.50785ZM22.7385 15.0581C21.3605 19.1191 17.4607 22.0278 12.8871 22.0278C8.19967 22.0278 4.21875 18.9712 2.93749 14.7528L3.85425 15.2716C4.15435 15.4414 4.54494 15.3444 4.72666 15.0549C4.90839 14.7654 4.81242 14.3931 4.51233 14.2233L2.92991 13.3278C2.18951 12.9089 1.22409 13.1885 0.836691 13.9341L0.0673138 15.4148C-0.0897051 15.717 0.0373344 16.0804 0.351064 16.2264C0.664794 16.3724 1.04641 16.2457 1.20343 15.9435L1.68845 15.0101C3.09189 19.7521 7.563 23.2383 12.8871 23.2383C18.053 23.2383 22.4171 19.9548 23.9527 15.4291C24.0607 15.1109 23.8764 14.7699 23.5411 14.6674C23.2058 14.565 22.8464 14.7399 22.7385 15.0581Z" fill="#51B89C" />
                  </svg>
                  <div>
                  <p>Active health plan</p>
                  <span>Last update on {DateFormats(props.clientDetails.active_health_plan?.last_modified_date, 'MMMM MM, YYYY')} </span>
                  </div>
                </div>
                <RightIcon />
              </GwDocumentCard>)
              :
              (<div className="GwCardBody"><div className="GwCardBodyContentHolder">
                <span className="GwCardIcon">
                  <svg
                    width="24"
                    height="25"
                    viewBox="0 0 24 25"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M12.2758 3.34475C7.27588 3.34475 3.19212 7.49522 3.192fz12 12.653C3.19212 12.9582 2.94225 13.2056 2.63403 13.2056C2.32581 13.2056 2.07594 12.9582 2.07594 12.653C2.07594 6.91872 6.62574 2.23949 12.2758 2.23949C17.571 2.23949 21.8998 6.34933 22.4227 11.5858L23.0212 10.9057C23.2236 10.6756 23.5762 10.6516 23.8085 10.8521C24.0409 11.0526 24.0651 11.4017 23.8627 11.6318L22.8724 12.7571C22.6522 13.0074 22.3576 13.1521 22.0515 13.1896C22.0086 13.2 21.9638 13.2056 21.9176 13.2056C21.8854 13.2056 21.8539 13.2029 21.8232 13.1977C21.5068 13.1816 21.1947 13.052 20.9551 12.8069L19.827 11.6532C19.6126 11.4339 19.6183 11.084 19.8398 10.8717C20.0612 10.6594 20.4145 10.6651 20.6289 10.8844L21.2988 11.5694C20.7743 6.92611 16.9203 3.34475 12.2758 3.34475ZM12.6177 8.27568C14.2734 6.95596 16.7284 7.41515 17.7839 9.24199C18.439 10.3758 18.3327 11.7899 17.5154 12.8152L13.1291 18.3172C12.6077 18.9712 11.6062 18.9712 11.0849 18.3172L6.69856 12.8152C5.88121 11.7899 5.77491 10.3758 6.42999 9.24199C7.4855 7.41515 9.94052 6.95596 11.5963 8.27568L12.107 8.68274L12.6177 8.27568ZM16.8151 9.79086C16.1005 8.55408 14.4385 8.24321 13.3175 9.13666L12.792 9.55559C12.392 9.87435 11.8219 9.87435 11.422 9.55559L10.8964 9.13666C9.77544 8.24321 8.11339 8.55408 7.3988 9.79086C6.9699 10.5332 7.0395 11.4591 7.57464 12.1304L11.9609 17.6324C12.0354 17.7258 12.1785 17.7258 12.253 17.6324L16.6393 12.1304C17.1744 11.4591 17.244 10.5332 16.8151 9.79086ZM20.8961 15.7706C19.6904 19.4785 16.278 22.1342 12.2761 22.1342C8.17383 22.1342 4.68993 19.3423 3.56959 15.4895L4.37246 15.9636C4.63505 16.1186 4.97681 16.03 5.13582 15.7657C5.29483 15.5014 5.21086 15.1614 4.94827 15.0064L3.56366 14.1888C2.91582 13.8063 2.07107 14.0616 1.7321 14.7423L1.0589 16.0943C0.921508 16.3702 1.03267 16.702 1.30718 16.8353C1.58169 16.9686 1.91561 16.853 2.053 16.5771L2.47703 15.7255C3.70462 20.0558 7.61715 23.2395 12.2761 23.2395C16.7963 23.2395 20.6149 20.2415 21.9585 16.1093C22.053 15.8188 21.8918 15.5075 21.5984 15.4139C21.305 15.3204 20.9906 15.4801 20.8961 15.7706Z"
                      fill="#B0B0B0"
                    />
                  </svg>
                </span>
                <div className="GwCardContent">
                  <span> No active health plan yet </span>
                  <span>Create Health plan after your first appoinment</span>
                </div>
              </div>
              </div>)
            }

          </GwOverviewCard>

          <GwOverviewCard>
            <div className="GwCardHeader">
              <PiTypography component="h3">Recent Activity</PiTypography>
            </div>
            {recentActivity.length === 0 && (<div className="GwCardBody">
              <div className="GwCardBodyContentHolder"><span className="GwCardIcon">
                <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 2.41199C11.0111 2.41199 10.0444 2.70523 9.22215 3.25464C8.3999 3.80405 7.75904 4.58494 7.3806 5.49857C7.00216 6.4122 6.90315 7.41753 7.09607 8.38744C7.289 9.35734 7.7652 10.2483 8.46447 10.9475C9.16373 11.6468 10.0546 12.123 11.0245 12.3159C11.9945 12.5088 12.9998 12.4098 13.9134 12.0314C14.827 11.6529 15.6079 11.0121 16.1573 10.1898C16.7068 9.36759 17 8.40089 17 7.41199C17 6.0859 16.4732 4.81414 15.5355 3.87645C14.5979 2.93877 13.3261 2.41199 12 2.41199ZM12 10.412C11.4067 10.412 10.8266 10.236 10.3333 9.9064C9.83994 9.57675 9.45542 9.10822 9.22836 8.56004C9.0013 8.01186 8.94189 7.40866 9.05764 6.82672C9.1734 6.24477 9.45912 5.71022 9.87868 5.29067C10.2982 4.87111 10.8328 4.58539 11.4147 4.46963C11.9967 4.35388 12.5999 4.41329 13.1481 4.64035C13.6962 4.86741 14.1648 5.25193 14.4944 5.74528C14.8241 6.23862 15 6.81864 15 7.41199C15 8.20764 14.6839 8.9707 14.1213 9.53331C13.5587 10.0959 12.7956 10.412 12 10.412ZM21 21.412V20.412C21 18.5555 20.2625 16.775 18.9497 15.4622C17.637 14.1495 15.8565 13.412 14 13.412H10C8.14348 13.412 6.36301 14.1495 5.05025 15.4622C3.7375 16.775 3 18.5555 3 20.412V21.412H5V20.412C5 19.0859 5.52678 17.8141 6.46447 16.8765C7.40215 15.9388 8.67392 15.412 10 15.412H14C15.3261 15.412 16.5979 15.9388 17.5355 16.8765C18.4732 17.8141 19 19.0859 19 20.412V21.412H21Z" fill="#B0B0B0" />
                </svg>
              </span>
                <div className="GwCardContent">
                  <span>No recent activities yet</span>
                  <span>  </span>
                </div>
              </div>
            </div>)}

            {recentActivity.length > 0 && (
              <PiRecentActivity
                activity={recentActivity}
              />
            )}
          </GwOverviewCard>

          <GwOverviewCard>
            <div className='appointments'>
              <div className="GwCardHeader">
                <PiTypography component="h3">Appointments</PiTypography>
              </div>
              <div className='appointments-grid'>
                <Appointments id={props.id} />
              </div>
            </div>
          </GwOverviewCard>
        </OverviewleftContainer>

        <OverviewRightContainer>
          <div className="RightColumnHeader">
            <span>
              <PiTypography component="h3">Your to-do</PiTypography>
            </span>
            <span className="ToDoCount">0/4</span>
          </div>
          <div className="ToDoSubTitle">
            Complete before the appointment on Jul 7, 2022.
          </div>
          <div className="RightColumnCardsHolder">

            {props.displayAssignButton && <ToDoCard>
              <div className="ToDoCardContent">
                <span className="ToDoIcon">
                  <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5 20.9911V19.9911C5 18.1346 5.7375 16.3542 7.05025 15.0414C8.36301 13.7286 10.1435 12.9911 12 12.9911V12.9911C13.8565 12.9911 15.637 13.7286 16.9497 15.0414C18.2625 16.3542 19 18.1346 19 19.9911V20.9911H5ZM12 12.9911C13.0609 12.9911 14.0783 12.5697 14.8284 11.8196C15.5786 11.0694 16 10.052 16 8.99115C16 7.93028 15.5786 6.91287 14.8284 6.16272C14.0783 5.41258 13.0609 4.99115 12 4.99115C10.9391 4.99115 9.92172 5.41258 9.17157 6.16272C8.42143 6.91287 8 7.93028 8 8.99115C8 10.052 8.42143 11.0694 9.17157 11.8196C9.92172 12.5697 10.9391 12.9911 12 12.9911V12.9911Z" stroke="#E09B07" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round" />
                  </svg>
                </span>
                <div className="ToDoCardInnerContent">
                  {(props.clientDetails.assignment_details && (props.clientDetails.assignment_details.hc_assigned === false || !props.clientDetails.assignment_details.hc_assigned === false)) &&
                    <>
                      <span className="ToDoCardTitle">{props.assignButtonText}</span>
                      <span className="ToDoCardTimeStamp">
                        Due in 6 hours
                      </span>
                    </>}
                </div>

                <PiButton
                  appearance="primary"
                  label="Assign"
                  size="medium"
                  onClick={props.onAssignClick}
                  className="mt-3"
                  isDisabled={props.isAssignButtonDisable}
                />
              </div>
              <div className="ToDoCheckMark">
                <PiCheckbox name="checkbox" size="large" isDisabled={props.isAssignButtonDisable} isChecked={props.isAssignButtonDisable} />
              </div>
            </ToDoCard>}

            <ToDoCard>
              <div className="ToDoCardContent">
                <span className="ToDoIcon">
                  <svg
                    width="24"
                    height="25"
                    viewBox="0 0 24 25"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <g clipPath="url(#clip0_7476_17002)">
                      <path
                        d="M21 12.3361V8.11615C20.9993 7.51962 20.762 6.94772 20.3402 6.52591C19.9184 6.1041 19.3465 5.86683 18.75 5.86615H5.25C4.65347 5.86683 4.08157 6.1041 3.65976 6.52591C3.23795 6.94772 3.00068 7.51962 3 8.11615V12.3361C2.35643 12.5032 1.78646 12.879 1.37931 13.4047C0.97217 13.9304 0.750848 14.5762 0.75 15.2411V20.4911C0.750447 20.8888 0.908625 21.2701 1.18983 21.5513C1.47104 21.8325 1.85231 21.9907 2.25 21.9911H3V24.2411H4.5V21.9911H19.5V24.2411H21V21.9911H21.75C22.1477 21.9907 22.529 21.8325 22.8102 21.5513C23.0914 21.2701 23.2496 20.8888 23.25 20.4911V15.2411C23.2492 14.5762 23.0278 13.9304 22.6207 13.4047C22.2135 12.879 21.6436 12.5032 21 12.3361ZM5.25 20.4911H2.25V15.2411C2.25 14.8433 2.40804 14.4618 2.68934 14.1805C2.97064 13.8992 3.35218 13.7411 3.75 13.7411C4.14782 13.7411 4.52936 13.8992 4.81066 14.1805C5.09196 14.4618 5.25 14.8433 5.25 15.2411V20.4911ZM17.25 20.4911H6.75V15.9911H17.25V20.4911ZM17.3449 14.4911H6.65508C6.52004 13.9727 6.24913 13.4997 5.8703 13.1208C5.49147 12.742 5.01844 12.4711 4.5 12.3361V8.11615C4.50024 7.91731 4.57933 7.72668 4.71993 7.58608C4.86053 7.44548 5.05116 7.36639 5.25 7.36615H18.75C18.9488 7.36639 19.1395 7.44548 19.2801 7.58608C19.4207 7.72668 19.4998 7.91731 19.5 8.11615V12.3361C18.9816 12.4711 18.5085 12.742 18.1297 13.1208C17.7509 13.4997 17.48 13.9727 17.3449 14.4911ZM21.75 20.4911H18.75V15.2411C18.75 14.8433 18.908 14.4618 19.1893 14.1805C19.4706 13.8992 19.8522 13.7411 20.25 13.7411C20.6478 13.7411 21.0294 13.8992 21.3107 14.1805C21.592 14.4618 21.75 14.8433 21.75 15.2411L21.7509 20.4911H21.75Z"
                        fill="#E09B07"
                      />
                    </g>
                    <defs>
                      <clipPath id="clip0_7476_17002">
                        <rect
                          width="24"
                          height="24"
                          fill="white"
                          transform="translate(0 0.99115)"
                        />
                      </clipPath>
                    </defs>
                  </svg>
                </span>
                <div className="ToDoCardInnerContent">
                  <span className="ToDoCardTitle">Video Appoinment</span>
                  <span className="ToDoCardTimeStamp">
                    3/20/2022 at 11:00am
                  </span>
                </div>

                <PiButton
                  appearance="primary"
                  label="Join Zoom"
                  size="medium"
                  onClick={() => console.log()}
                  className="mt-3"
                />
              </div>
              <div className="ToDoCheckMark">
                <PiCheckbox
                  name="checkbox"
                  size="large"
                  isDisabled={true}
                />
              </div>
            </ToDoCard>

            <ToDoCard>
              <div className="ToDoCardContent">
                <span className="ToDoIcon">
                  <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M3.75 12.9911L3.015 12.8441C3.00517 12.8925 3.00015 12.9418 3 12.9911H3.75ZM20.25 12.9911H21C20.9999 12.9418 20.9948 12.8925 20.985 12.8441L20.25 12.9911ZM16.125 12.9911V12.2411C15.962 12.2411 15.8034 12.2941 15.6732 12.3922C15.543 12.4903 15.4483 12.6282 15.4035 12.7849L16.125 12.9911ZM7.875 12.9911L8.59575 12.7849C8.55096 12.6283 8.45639 12.4905 8.32636 12.3924C8.19633 12.2943 8.03789 12.2412 7.875 12.2411V12.9911ZM20.235 9.09415C20.1903 8.90491 20.0739 8.74041 19.9103 8.63535C19.7467 8.53029 19.5486 8.49289 19.358 8.53102C19.1673 8.56915 18.9989 8.67985 18.8883 8.83975C18.7776 8.99966 18.7334 9.19628 18.765 9.38815L20.235 9.09415ZM3 15.6161C3 15.8151 3.07902 16.0058 3.21967 16.1465C3.36032 16.2871 3.55109 16.3661 3.75 16.3661C3.94891 16.3661 4.13968 16.2871 4.28033 16.1465C4.42098 16.0058 4.5 15.8151 4.5 15.6161H3ZM5.235 9.38815C5.26655 9.19628 5.22235 8.99966 5.11173 8.83975C5.0011 8.67985 4.83269 8.56915 4.64203 8.53102C4.45136 8.49289 4.25333 8.53029 4.08971 8.63535C3.92609 8.74041 3.80967 8.90491 3.765 9.09415L5.235 9.38815ZM10.125 6.99115C9.92609 6.99115 9.73532 7.07017 9.59467 7.21082C9.45402 7.35147 9.375 7.54224 9.375 7.74115C9.375 7.94006 9.45402 8.13083 9.59467 8.27148C9.73532 8.41213 9.92609 8.49115 10.125 8.49115V6.99115ZM13.875 8.49115C14.0739 8.49115 14.2647 8.41213 14.4053 8.27148C14.546 8.13083 14.625 7.94006 14.625 7.74115C14.625 7.54224 14.546 7.35147 14.4053 7.21082C14.2647 7.07017 14.0739 6.99115 13.875 6.99115V8.49115ZM10.125 9.99115C9.92609 9.99115 9.73532 10.0702 9.59467 10.2108C9.45402 10.3515 9.375 10.5422 9.375 10.7411C9.375 10.9401 9.45402 11.1308 9.59467 11.2715C9.73532 11.4121 9.92609 11.4911 10.125 11.4911V9.99115ZM13.875 11.4911C14.0739 11.4911 14.2647 11.4121 14.4053 11.2715C14.546 11.1308 14.625 10.9401 14.625 10.7411C14.625 10.5422 14.546 10.3515 14.4053 10.2108C14.2647 10.0702 14.0739 9.99115 13.875 9.99115V11.4911ZM6.375 10.7411C6.375 10.9401 6.45402 11.1308 6.59467 11.2715C6.73532 11.4121 6.92609 11.4911 7.125 11.4911C7.32391 11.4911 7.51468 11.4121 7.65533 11.2715C7.79598 11.1308 7.875 10.9401 7.875 10.7411H6.375ZM7.125 4.74115V3.99115C6.92609 3.99115 6.73532 4.07017 6.59467 4.21082C6.45402 4.35147 6.375 4.54224 6.375 4.74115H7.125ZM16.875 4.74115H17.625C17.625 4.54224 17.546 4.35147 17.4053 4.21082C17.2647 4.07017 17.0739 3.99115 16.875 3.99115V4.74115ZM16.125 10.7411C16.125 10.9401 16.204 11.1308 16.3447 11.2715C16.4853 11.4121 16.6761 11.4911 16.875 11.4911C17.0739 11.4911 17.2647 11.4121 17.4053 11.2715C17.546 11.1308 17.625 10.9401 17.625 10.7411H16.125ZM20.25 12.9911H19.5V18.9911H21V12.9919L20.25 12.9911ZM19.5 18.9911C19.5 19.3099 19.3328 19.6909 19.0163 20.0074C18.6997 20.3239 18.3188 20.4911 18 20.4911V21.9911C18.8062 21.9911 19.5503 21.5959 20.0775 21.0686C20.6047 20.5414 21 19.7974 21 18.9911H19.5ZM6 20.4911C5.68125 20.4911 5.30025 20.3239 4.98375 20.0074C4.6665 19.6909 4.5 19.3099 4.5 18.9911H3C3 19.7974 3.396 20.5414 3.9225 21.0686C4.44975 21.5959 5.19375 21.9911 6 21.9911V20.4911ZM4.5 18.9911V12.9911H3V18.9911H4.5ZM12 16.3661C13.9102 16.3661 15.1365 15.6124 15.8775 14.8137C16.2405 14.4236 16.4775 14.0329 16.626 13.7366C16.7094 13.5692 16.7808 13.396 16.8397 13.2184C16.8416 13.2127 16.8433 13.2069 16.845 13.2012V13.1989L16.8458 13.1981L16.125 12.9911C15.8844 12.9235 15.6441 12.8545 15.4042 12.7842V12.7819L15.405 12.7804V12.7789L15.4035 12.7864C15.3696 12.8818 15.3297 12.975 15.2843 13.0654C15.1867 13.2619 15.0247 13.5274 14.7787 13.7929C14.301 14.3074 13.4648 14.8661 12 14.8661V16.3661ZM16.125 13.7411H20.25V12.2411H16.125V13.7411ZM3.75 13.7411H7.875V12.2411H3.75V13.7411ZM7.875 12.9911C7.63431 13.0586 7.39406 13.1276 7.15425 13.1981V13.2012L7.1565 13.2056C7.16114 13.2223 7.16614 13.2388 7.1715 13.2551C7.18125 13.2836 7.194 13.3226 7.212 13.3692C7.24725 13.4621 7.29975 13.5881 7.374 13.7366C7.57136 14.1292 7.82337 14.4918 8.1225 14.8137C8.8635 15.6124 10.0898 16.3661 12 16.3661V14.8661C10.5353 14.8661 9.699 14.3074 9.22125 13.7936C9.01929 13.5762 8.8491 13.3313 8.71575 13.0662C8.66918 12.9731 8.62859 12.8771 8.59425 12.7789V12.7804L8.595 12.7819V12.7834L8.59575 12.7842L7.875 12.9911ZM18 20.4911H6V21.9911H18V20.4911ZM18.765 9.38815L19.515 13.1381L20.985 12.8441L20.235 9.09415L18.765 9.38815ZM3 12.9911V15.6161H4.5V12.9911H3ZM3.765 9.09415L3.015 12.8441L4.485 13.1381L5.235 9.38815L3.765 9.09415ZM10.125 8.49115H13.875V6.99115H10.125V8.49115ZM10.125 11.4911H13.875V9.99115H10.125V11.4911ZM7.875 10.7411V4.74115H6.375V10.7411H7.875ZM7.125 5.49115H16.875V3.99115H7.125V5.49115ZM16.125 4.74115V10.7411H17.625V4.74115H16.125Z" fill="#1596B7" />
                  </svg>
                </span>
                <div className="ToDoCardInnerContent">
                  <span className="ToDoCardTitle">Review Onboarding Documentation </span>
                  <span className="ToDoCardTimeStamp">
                    Due in 6 hours
                  </span>
                </div>

                <PiButton
                  appearance="link"
                  label="Start"
                  size="medium"
                  iconAfter={<svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0.195262 9.46255C-0.0650874 9.2022 -0.0650874 8.78009 0.195262 8.51974L3.72386 4.99115L0.195262 1.46255C-0.0650878 1.2022 -0.0650878 0.780092 0.195262 0.519743C0.455611 0.259393 0.877721 0.259393 1.13807 0.519743L5.13807 4.51974C5.39842 4.78009 5.39842 5.2022 5.13807 5.46255L1.13807 9.46255C0.877722 9.7229 0.455612 9.7229 0.195262 9.46255Z" fill="#067356" />
                  </svg>
                  }
                  onClick={() => console.log()}
                  className="mt-3"
                />
              </div>
              <div className="ToDoCheckMark">
                <PiCheckbox
                  name="checkbox"
                  size="large"
                  isDisabled={true}
                />
              </div>
            </ToDoCard>

            <ToDoCard>
              <div className="ToDoCardContent">
                <span className="ToDoIcon">
                  <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 2.99115C11.0111 2.99115 10.0444 3.28439 9.22215 3.8338C8.3999 4.38321 7.75904 5.1641 7.3806 6.07773C7.00216 6.99136 6.90315 7.9967 7.09607 8.9666C7.289 9.93651 7.7652 10.8274 8.46447 11.5267C9.16373 12.2259 10.0546 12.7022 11.0245 12.8951C11.9945 13.088 12.9998 12.989 13.9134 12.6105C14.827 12.2321 15.6079 11.5912 16.1573 10.769C16.7068 9.94676 17 8.98006 17 7.99115C17 6.66507 16.4732 5.3933 15.5355 4.45562C14.5979 3.51793 13.3261 2.99115 12 2.99115ZM12 10.9911C11.4067 10.9911 10.8266 10.8152 10.3333 10.4856C9.83994 10.1559 9.45542 9.68738 9.22836 9.1392C9.0013 8.59102 8.94189 7.98782 9.05764 7.40588C9.1734 6.82394 9.45912 6.28939 9.87868 5.86983C10.2982 5.45027 10.8328 5.16455 11.4147 5.04879C11.9967 4.93304 12.5999 4.99245 13.1481 5.21951C13.6962 5.44657 14.1648 5.83109 14.4944 6.32444C14.8241 6.81779 15 7.39781 15 7.99115C15 8.7868 14.6839 9.54986 14.1213 10.1125C13.5587 10.6751 12.7956 10.9911 12 10.9911ZM21 21.9911V20.9911C21 19.1346 20.2625 17.3542 18.9497 16.0414C17.637 14.7286 15.8565 13.9911 14 13.9911H10C8.14348 13.9911 6.36301 14.7286 5.05025 16.0414C3.7375 17.3542 3 19.1346 3 20.9911V21.9911H5V20.9911C5 19.6651 5.52678 18.3933 6.46447 17.4556C7.40215 16.5179 8.67392 15.9911 10 15.9911H14C15.3261 15.9911 16.5979 16.5179 17.5355 17.4556C18.4732 18.3933 19 19.6651 19 20.9911V21.9911H21Z" fill="#067356" />
                  </svg>
                </span>
                <div className="ToDoCardInnerContent">
                  <span className="ToDoCardTitle">Fill out clientâ€™s profile</span>
                  <span className="ToDoCardTimeStamp">

                  </span>
                </div>
                <PiButton
                  appearance="link"
                  label="Start"
                  size="medium"
                  iconAfter={<svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0.195262 9.46255C-0.0650874 9.2022 -0.0650874 8.78009 0.195262 8.51974L3.72386 4.99115L0.195262 1.46255C-0.0650878 1.2022 -0.0650878 0.780092 0.195262 0.519743C0.455611 0.259393 0.877721 0.259393 1.13807 0.519743L5.13807 4.51974C5.39842 4.78009 5.39842 5.2022 5.13807 5.46255L1.13807 9.46255C0.877722 9.7229 0.455612 9.7229 0.195262 9.46255Z" fill="#067356" />
                  </svg>
                  }
                  onClick={() => console.log()}
                  className="mt-3" />
              </div>
              <div className="ToDoCheckMark">
                <PiCheckbox name="checkbox"
                  size="large"
                  isDisabled={true}
                />
              </div>
            </ToDoCard>

            <ToDoCard>
              <div className="ToDoCardContent">
                <span className="ToDoIcon">
                  <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect x="2" y="4.99023" width="20" height="18" rx="2" stroke="#E09B07" strokeWidth="2" />
                    <path d="M16 2.99023L16 6.99023C16 7.93304 16 8.40444 15.7071 8.69734C15.4142 8.99023 14.9428 8.99023 14 8.99023L10 8.99023C9.05719 8.99023 8.58579 8.99023 8.29289 8.69734C8 8.40445 8 7.93304 8 6.99023L8 2.99024" stroke="#E09B07" strokeWidth="2" strokeLinecap="round" />
                    <path d="M8 14.9902L16 14.9902" stroke="#E09B07" strokeWidth="2" strokeLinecap="round" />
                  </svg>
                </span>
                <div className="ToDoCardInnerContent">
                  <span className="ToDoCardTitle">{props.clientDetails.active_health_plan ? 'Update' : 'Create'} Health Plan </span>
                  <span className="ToDoCardTimeStamp">
                  </span>
                </div>
                <PiButton
                  appearance="link"
                  label="Start"
                  size="medium"
                  iconAfter={<svg width="6" height="10" viewBox="0 0 6 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M0.195262 9.46255C-0.0650874 9.2022 -0.0650874 8.78009 0.195262 8.51974L3.72386 4.99115L0.195262 1.46255C-0.0650878 1.2022 -0.0650878 0.780092 0.195262 0.519743C0.455611 0.259393 0.877721 0.259393 1.13807 0.519743L5.13807 4.51974C5.39842 4.78009 5.39842 5.2022 5.13807 5.46255L1.13807 9.46255C0.877722 9.7229 0.455612 9.7229 0.195262 9.46255Z" fill="#067356" />
                  </svg>
                  }
                  onClick={() => {
                    if (props.clientDetails.active_health_plan) {
                      history.push("/office/health-plan" + '/' + props.clientDetails.active_health_plan._id + '/' + props.id + "/phases")
                    } else {
                      history.push("/office/health-plan" + '/' + props.id)
                    }

                  }}
                  className="mt-3" />
              </div>
              <div className="ToDoCheckMark">
                <PiCheckbox name="checkbox"
                  size="large"
                  isDisabled={true}
                  isChecked={props.clientDetails.active_health_plan && props.clientDetails.active_health_plan.is_submitted === true ? true : false}
                />
              </div>
            </ToDoCard>

          </div>
        </OverviewRightContainer>
      </OverviewContainer>
    </>
  );
}
